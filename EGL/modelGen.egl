import '../common/atributo-item'
import { AtributoItemModel,AtributoItemInterface } from '../common/atributo-item';
import { AtributoItemStringModel } from '../common/atributo-item-string';
import { AtributoItemNumberModel } from '../common/atributo-item-number';
import { AtributoItemBooleanModel } from '../common/atributo-item-boolean';
import { AtributoItemDateModel } from '../common/atributo-item-date';
import { DireccionModel, DireccionModelDelegate } from '../direccion/direccion';
import { CursoModel, CursoModelDelegate } from '../curso/curso';


export interface [%=mod.name%]ModelDelegate {
    add[%=mod.name%]: ([%=mod.name.toLowerCase%]:[%=mod.name%]Model) => void;
    remove[%=mod.name%]: ([%=mod.name.toLowerCase%]:[%=mod.name%])=> void;
}
[%
  var text1:String="";
  var mast= Application.all.detalles.collect(dt | dt.maestro).flatten();%]
  [%=mast%]
  
  
  

export class [%=mod.name%]Model [%=text1%]{
 
    public fields: AtributoItemModel[]

    constructor(){
        this.fields = [];
        [%
        for (at in mod.atributos.flatten()){%]
  		this.fields.push(new AtributoItem[%=at.tipoDato%]Model("[%=at.name%]",[%=at.isEditable%],[%=at.isMandatory%],[%=at.isVisibleInList%],[%=at.isTitle%],"[%=at.tipoDato.value%]"))
        [%
        }
        %]
    }

    public getTitleField():AtributoItemModel{
        for(let f of this.fields){
            if(f.isTitle){
                return f;
            }
        }
        return null;
    }
 
    
}